--[[//

if u r reading this u opened the source! wow good job!!!

for some context: this was made and released for the purpose of pissing off the other losers who
think they're cool using bots in games like dollhouse roleplay

=-----------------------------------=
This was made by D00M
discord: Mil#1522
discord server: http://www.eternaladmin.ml/
github: https://github.com/Pacifest
=-----------------------------------=

(Might release the version that flings & crashes later lol)

--\\]]
wait(3)
local Players = game:GetService("Players")

local Player = Players.LocalPlayer

--_G.BotMessages = {'Oven is bad! - D00M ','Ovens bots r bad!!!! - D00M','ovens bot messages are kinda weird - D00M','trying to prove ur cool by flinging? who would do that? *cough* oven *cough* - D00M','"im always better than the other kids botting" ðŸ¤“'}

local playersTable = {}
local target = 't'

for i,Plyr in pairs(Players:GetPlayers()) do
    if Plyr ~= Player then
        table.insert(playersTable,Plyr.Name)
    end
end

Players.PlayerRemoving:Connect(function(oldPlayer)
    if table.find(playersTable,oldPlayer.Name) then
        local tableNumber = table.find(playersTable,oldPlayer.Name)
        table.remove(playersTable,tableNumber)
    end
    if target == oldPlayer.Name then
    selectedPlayer = playersTable[math.random(1, #playersTable)]
    if selectedPlayer ~= target then
        target = selectedPlayer
        else
            repeat wait() selectedPlayer = playersTable[math.random(1, #playersTable)] until selectedPlayer ~= target
            target = selectedPlayer
    end
    end
end)

Players.PlayerAdded:Connect(function(newPlayer)
    if not table.find(playersTable,newPlayer.Name) then
        table.insert(playersTable,newPlayer.Name)
    end
end)

startMessageSpam = function()
while wait(2) do
game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(_G.BotMessages[math.random(1, #_G.BotMessages)], "All")
end
end

startTargetLoop = function()
    selectedPlayer = playersTable[math.random(1, #playersTable)]
    if selectedPlayer ~= target then
        target = selectedPlayer
        else
            repeat wait() selectedPlayer = playersTable[math.random(1, #playersTable)] until selectedPlayer ~= target
            target = selectedPlayer
    end
   while wait(90) do 
       selectedPlayer = playersTable[math.random(1, #playersTable)]
       if selectedPlayer ~= target then
           target = selectedPlayer
       end
    wait(5)
   end
end

startJumpLoop = function()
    antiSeat = function()
        while wait(.5) do
            if Player.Character:FindFirstChildOfClass("Humanoid").Sit == true then
                Player.Character:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)
            end
        end
    end
    coroutine.wrap(antiSeat)()
    while wait(25) do
        for x = 1,5 do
            Player.Character:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)
        end
    end
end

serverHopCommand = function()
    queueteleport = (syn and syn.queue_on_teleport) or queue_on_teleport or (fluxus and fluxus.queue_on_teleport)
    httprequest = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or request
    PlaceId, JobId = game.PlaceId, game.JobId
    	if httprequest then
		local servers = {}
		local req = httprequest({Url = string.format("https://games.roblox.com/v1/games/%s/servers/Public?sortOrder=Asc&limit=100", PlaceId)})
		local body = HttpService:JSONDecode(req.Body)
		if body and body.data then
			for i, v in next, body.data do
				if type(v) == "table" and tonumber(v.playing) and tonumber(v.maxPlayers) and v.playing < v.maxPlayers and v.id ~= JobId then
					table.insert(servers, 1, v.id)
				end 
			end
		end
		if #servers > 0 then
			game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceId, servers[math.random(1, #servers)], Players.LocalPlayer)
		else
			return print("COULD NOT FIND SERVER")
		end
	end
end

startServerLoop = function()
    
    countCheckLoop = function()
       while wait(10) do
           local PlayerCount = #Players:GetPlayers()
           if PlayerCount < 5 then
               serverHopCommand()
               end
         end
    end
    
    coroutine.wrap(countCheckLoop)()
    
    while wait(900) do
        serverHopCommand()
    end
end

local RunService = game:GetService("RunService")

startTeleportLoop = function()
   RunService.Heartbeat:Connect(function(step)
        if not game:GetService("Workspace"):FindFirstChild(target) then repeat wait() until game:GetService("Workspace")[target] end
    if Players[target].Character ~= nil and Players[target].Character.HumanoidRootPart and Players[target].Character:FindFirstChild("HumanoidRootPart") ~= nil then
        Player.Character:FindFirstChild("HumanoidRootPart").CFrame = Players[target].Character:WaitForChild("HumanoidRootPart").CFrame * CFrame.new(0,0.2,0.7)
    end
    end)
end
coroutine.wrap(startJumpLoop)()
coroutine.wrap(startMessageSpam)()
coroutine.wrap(startTargetLoop)()
coroutine.wrap(startTeleportLoop)()
coroutine.wrap(startServerLoop)()
